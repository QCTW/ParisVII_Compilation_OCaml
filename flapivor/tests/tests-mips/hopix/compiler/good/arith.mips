#include <sys/regdef.h>
.globl main
.data
__global__main:
.word 1
.text
main: addiu sp, sp, -64
l30:  # Pass actuals
l27:  li fp, 100
      sw fp, 52(sp)
l28:  li fp, 11
      sw fp, 48(sp)
l29:  lw v1, 52(sp)
      lw fp, 48(sp)
      add a0, v1, fp
l11:  # Save caller-saved registers
l1:   sw t0, 60(sp)
l2:   sw t1, 44(sp)
l3:   sw t2, 40(sp)
l4:   sw t3, 36(sp)
l5:   sw t4, 32(sp)
l6:   sw t5, 28(sp)
l7:   sw t6, 24(sp)
l8:   sw t7, 20(sp)
l9:   sw t8, 16(sp)
l10:  sw t9, 56(sp)
l26:  # Function call
l25:  jal print_int
l24:  # Restore caller-saved registers
l14:  lw fp, 60(sp)
      move t0, fp
l15:  lw fp, 44(sp)
      move t1, fp
l16:  lw fp, 40(sp)
      move t2, fp
l17:  lw fp, 36(sp)
      move t3, fp
l18:  lw fp, 32(sp)
      move t4, fp
l19:  lw fp, 28(sp)
      move t5, fp
l20:  lw fp, 24(sp)
      move t6, fp
l21:  lw fp, 20(sp)
      move t7, fp
l22:  lw fp, 16(sp)
      move t8, fp
l23:  lw fp, 56(sp)
      move t9, fp
l13:  # Retrieve return value
l12:  lui v1, %hi(__global__main)
      sw v0, %lo(__global__main)(v1)
l31:  li a0, 0
      j exit