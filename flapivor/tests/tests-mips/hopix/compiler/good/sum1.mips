#include <sys/regdef.h>
.globl main
.data
__global__main:
.word 1
.text
main: addiu sp, sp, -112
l99:  # Pass actuals
l98:  # Pass actuals
l94:  li fp, 1
      move a0, fp
l95:  li fp, 2
      move a1, fp
l96:  li fp, 3
      move a2, fp
l97:  li fp, 4
      move a3, fp
l90:  li fp, 5
      sw fp, 28(sp)
l91:  li fp, 6
      sw fp, 24(sp)
l76:  # Save caller-saved registers
l66:  sw t0, 68(sp)
l67:  sw t1, 64(sp)
l68:  sw t2, 60(sp)
l69:  sw t3, 56(sp)
l70:  sw t4, 52(sp)
l71:  sw t5, 48(sp)
l72:  sw t6, 44(sp)
l73:  sw t7, 40(sp)
l74:  sw t8, 36(sp)
l75:  sw t9, 32(sp)
l93:  # Function call
l92:  lw v1, 28(sp)
      sw v1, 16(sp)
      lw v1, 24(sp)
      sw v1, 20(sp)
      jal sum
l89:  # Restore caller-saved registers
l79:  lw fp, 68(sp)
      move t0, fp
l80:  lw fp, 64(sp)
      move t1, fp
l81:  lw fp, 60(sp)
      move t2, fp
l82:  lw fp, 56(sp)
      move t3, fp
l83:  lw fp, 52(sp)
      move t4, fp
l84:  lw fp, 48(sp)
      move t5, fp
l85:  lw fp, 44(sp)
      move t6, fp
l86:  lw fp, 40(sp)
      move t7, fp
l87:  lw fp, 36(sp)
      move t8, fp
l88:  lw fp, 32(sp)
      move t9, fp
l78:  # Retrieve return value
l77:  move a0, v0
l50:  # Save caller-saved registers
l40:  sw t0, 108(sp)
l41:  sw t1, 104(sp)
l42:  sw t2, 100(sp)
l43:  sw t3, 96(sp)
l44:  sw t4, 92(sp)
l45:  sw t5, 88(sp)
l46:  sw t6, 84(sp)
l47:  sw t7, 80(sp)
l48:  sw t8, 76(sp)
l49:  sw t9, 72(sp)
l65:  # Function call
l64:  jal print_int
l63:  # Restore caller-saved registers
l53:  lw fp, 108(sp)
      move t0, fp
l54:  lw fp, 104(sp)
      move t1, fp
l55:  lw fp, 100(sp)
      move t2, fp
l56:  lw fp, 96(sp)
      move t3, fp
l57:  lw fp, 92(sp)
      move t4, fp
l58:  lw fp, 88(sp)
      move t5, fp
l59:  lw fp, 84(sp)
      move t6, fp
l60:  lw fp, 80(sp)
      move t7, fp
l61:  lw fp, 76(sp)
      move t8, fp
l62:  lw fp, 72(sp)
      move t9, fp
l52:  # Retrieve return value
l51:  lui v1, %hi(__global__main)
      sw v0, %lo(__global__main)(v1)
l100: li a0, 0
      j exit
sum:  addiu sp, sp, -108
l15:  # Save callee-saved registers
l1:   sw ra, 104(sp)
l2:   sw s0, 60(sp)
l3:   sw s1, 56(sp)
l4:   sw s2, 52(sp)
l5:   sw s3, 48(sp)
l6:   sw s4, 44(sp)
l7:   sw s5, 40(sp)
l8:   sw s6, 36(sp)
l9:   sw s7, 32(sp)
l14:  # Retrieve first four actuals
l10:  sw a0, 24(sp)
l11:  sw a1, 20(sp)
l12:  sw a2, 16(sp)
l13:  sw a3, 28(sp)
l39:  # Function body
l28:  lw fp, 24(sp)
      sw fp, 84(sp)
l29:  lw fp, 20(sp)
      sw fp, 80(sp)
l30:  lw fp, 88(sp)
      lw v1, 84(sp)
      lw fp, 80(sp)
      add fp, v1, fp
      sw fp, 88(sp)
l31:  lw fp, 16(sp)
      sw fp, 76(sp)
l32:  lw fp, 92(sp)
      lw v1, 88(sp)
      lw fp, 76(sp)
      add fp, v1, fp
      sw fp, 92(sp)
l33:  lw fp, 28(sp)
      sw fp, 72(sp)
l34:  lw fp, 96(sp)
      lw v1, 92(sp)
      lw fp, 72(sp)
      add fp, v1, fp
      sw fp, 96(sp)
l35:  lw fp, 124(sp)
      sw fp, 68(sp)
l36:  lw fp, 100(sp)
      lw v1, 96(sp)
      lw fp, 68(sp)
      add fp, v1, fp
      sw fp, 100(sp)
l37:  lw fp, 128(sp)
      sw fp, 64(sp)
l38:  lw v1, 100(sp)
      lw fp, 64(sp)
      add v0, v1, fp
l25:  # Restore callee-saved registers
l16:  lw fp, 104(sp)
      move ra, fp
l17:  lw fp, 60(sp)
      move s0, fp
l18:  lw fp, 56(sp)
      move s1, fp
l19:  lw fp, 52(sp)
      move s2, fp
l20:  lw fp, 48(sp)
      move s3, fp
l21:  lw fp, 44(sp)
      move s4, fp
l22:  lw fp, 40(sp)
      move s5, fp
l23:  lw fp, 36(sp)
      move s6, fp
l24:  lw fp, 32(sp)
      move s7, fp
l27:  # Return
l26:  addiu sp, sp, 108
      jr ra